{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RestaurantCardComponent } from '../restaurant-card/restaurant-card.component';\nimport { RestaurantFilterPipe } from '../pipes/restaurant-filter.pipe';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/restaurant-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RestaurantsPageComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"fs-restaurant-card\", 9);\n    i0.ɵɵlistener(\"deleted\", function RestaurantsPageComponent_div_8_Template_fs_restaurant_card_deleted_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const restaurant_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteRestaurant(restaurant_r1));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const restaurant_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"restaurant\", restaurant_r1);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\nexport class RestaurantsPageComponent {\n  constructor(restaurantsService) {\n    this.restaurantsService = restaurantsService;\n    this.restaurants = [];\n    this.toSearch = '';\n    this.active = true;\n  }\n  ngOnInit() {\n    this.restaurantsService.getRestaurants().subscribe(restaurant => this.restaurants = restaurant);\n  }\n  saveRestaurant(restaurant) {\n    this.restaurants = [...this.restaurants, restaurant];\n  }\n  deleteRestaurant(restaurant) {\n    this.restaurants = this.restaurants.filter(r => r !== restaurant);\n  }\n  setActive() {\n    if (this.active) {\n      this.active = false;\n    } else {\n      this.active = true;\n    }\n  }\n  static #_ = this.ɵfac = function RestaurantsPageComponent_Factory(t) {\n    return new (t || RestaurantsPageComponent)(i0.ɵɵdirectiveInject(i1.RestaurantsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RestaurantsPageComponent,\n    selectors: [[\"fs-restaurants-page\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 10,\n    vars: 9,\n    consts: [[1, \"navbar\", \"navbar-light\", \"bg-light\", \"justify-content-between\", \"mt-3\", \"row\"], [1, \"nav\", \"nav-pills\", \"col-auto\", \"ms-3\"], [1, \"nav-item\"], [1, \"nav-link\", \"active\", 2, \"cursor\", \"pointer\", 3, \"ngClass\", \"click\"], [1, \"container-fluid\", \"col\"], [\"type\", \"text\", \"name\", \"search\", \"placeholder\", \"Search\", \"aria-label\", \"Search\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"placesContainer\", 1, \"mb-4\", \"mt-4\", \"row\", \"row-cols-1\", \"row-cols-md-2\", \"row-cols-xl-3\", \"g-4\"], [\"class\", \"col\", 4, \"ngFor\", \"ngForOf\"], [1, \"col\"], [3, \"restaurant\", \"deleted\"]],\n    template: function RestaurantsPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ul\", 1)(2, \"li\", 2)(3, \"a\", 3);\n        i0.ɵɵlistener(\"click\", function RestaurantsPageComponent_Template_a_click_3_listener() {\n          return ctx.setActive();\n        });\n        i0.ɵɵtext(4, \"Show open\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"form\", 4)(6, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function RestaurantsPageComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.toSearch = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵtemplate(8, RestaurantsPageComponent_div_8_Template, 2, 1, \"div\", 7);\n        i0.ɵɵpipe(9, \"restaurantFilter\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.active));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.toSearch);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(9, 3, ctx.restaurants, !ctx.active, ctx.toSearch));\n      }\n    },\n    dependencies: [CommonModule, i2.NgClass, i2.NgForOf, FormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, RestaurantCardComponent, RestaurantFilterPipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SAASC,uBAAuB,QAAQ,8CAA8C;AAEtF,SAASC,oBAAoB,QAAQ,iCAAiC;;;;;;;;ICyBpEC,8BAGC;IAGGA;MAAA;MAAA;MAAA;MAAA,OAAWA,qDAA4B;IAAA,EAAC;IACzCA,iBAAqB;;;;IAFpBA,eAAyB;IAAzBA,0CAAyB;;;;;;;;ADd/B,OAAM,MAAOC,wBAAwB;EAEnCC,YAA6BC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IAQ/C,gBAAW,GAAiB,EAAE;IAC9B,aAAQ,GAAG,EAAE;IACb,WAAM,GAAG,IAAI;EARb;EAEAC,QAAQ;IACN,IAAI,CAACD,kBAAkB,CAACE,cAAc,EAAE,CAACC,SAAS,CAAEC,UAAU,IAAK,IAAI,CAACC,WAAW,GAAGD,UAAU,CAAC;EACnG;EAMAE,cAAc,CAACF,UAAsB;IACnC,IAAI,CAACC,WAAW,GAAG,CAAC,GAAG,IAAI,CAACA,WAAW,EAAED,UAAU,CAAC;EACtD;EAEAG,gBAAgB,CAACH,UAAsB;IACrC,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACG,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKL,UAAU,CAAC;EACrE;EAEAM,SAAS;IACP,IAAG,IAAI,CAACC,MAAM,EAAC;MACb,IAAI,CAACA,MAAM,GAAG,KAAK;KACpB,MAAI;MACH,IAAI,CAACA,MAAM,GAAG,IAAI;;EAEtB;EAAC;qBA5BUb,wBAAwB;EAAA;EAAA;UAAxBA,wBAAwB;IAAAc;IAAAC;IAAAC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCrBrCrB,8BAA2E;QAOnEA;UAAA,OAASsB,eAAW;QAAA,EAAC;QACpBtB,yBAAS;QAAAA,iBACX;QAGLA,+BAAkC;QAO9BA;UAAA;QAAA,EAAsB;QANxBA,iBAOE;QAMNA,8BAGC;QACCA,yEAQM;;QACRA,iBAAM;;;QAjCEA,eAAgC;QAAhCA,gEAAgC;QAalCA,eAAsB;QAAtBA,sCAAsB;QAaDA,eAAmD;QAAnDA,0FAAmD;;;mBDlB1EJ,YAAY,0BACZC,WAAW,iHAEXC,uBAAuB,EACvBC,oBAAoB;IAAAwB;EAAA","names":["CommonModule","FormsModule","RestaurantCardComponent","RestaurantFilterPipe","i0","RestaurantsPageComponent","constructor","restaurantsService","ngOnInit","getRestaurants","subscribe","restaurant","restaurants","saveRestaurant","deleteRestaurant","filter","r","setActive","active","selectors","standalone","features","decls","vars","consts","template","ctx","styles"],"sourceRoot":"","sources":["C:\\Users\\nesto\\OneDrive\\Escritorio\\2DAW\\DWEC\\Ejercicios\\ANGULAR\\Exercise_10\\angular-foodscore\\src\\app\\restaurants\\restaurants-page\\restaurants-page.component.ts","C:\\Users\\nesto\\OneDrive\\Escritorio\\2DAW\\DWEC\\Ejercicios\\ANGULAR\\Exercise_10\\angular-foodscore\\src\\app\\restaurants\\restaurants-page\\restaurants-page.component.html"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RestaurantFormComponent } from '../restaurant-form/restaurant-form.component';\nimport { RestaurantCardComponent } from '../restaurant-card/restaurant-card.component';\nimport { Restaurant } from '../interfaces/restaurant';\nimport { RestaurantFilterPipe } from '../pipes/restaurant-filter.pipe';\nimport { RestaurantsService } from '../services/restaurant-service.service';\n\n@Component({\n  selector: 'fs-restaurants-page',\n  standalone: true,\n  templateUrl: './restaurants-page.component.html',\n  styleUrls: ['./restaurants-page.component.css'],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RestaurantFormComponent,\n    RestaurantCardComponent,\n    RestaurantFilterPipe,\n  ],\n})\nexport class RestaurantsPageComponent implements OnInit {\n\n  constructor(private readonly restaurantsService: RestaurantsService) {\n\n  }\n\n  ngOnInit(): void {\n    this.restaurantsService.getRestaurants().subscribe((restaurant) => this.restaurants = restaurant);\n  }\n\n  restaurants: Restaurant[] = [];\n  toSearch = '';\n  active = true;\n\n  saveRestaurant(restaurant: Restaurant): void {\n    this.restaurants = [...this.restaurants, restaurant];\n  }\n\n  deleteRestaurant(restaurant: Restaurant): void {\n    this.restaurants = this.restaurants.filter((r) => r !== restaurant);\n  }\n\n  setActive() {\n    if(this.active){\n      this.active = false;\n    }else{\n      this.active = true;\n    }\n  }\n}\n","<!-- Pipe -->\n<nav class=\"navbar navbar-light bg-light justify-content-between mt-3 row\">\n  <ul class=\"nav nav-pills col-auto ms-3\">\n    <li class=\"nav-item\">\n      <a\n        class=\"nav-link active\"\n        style=\"cursor: pointer\"\n        [ngClass]=\"{ 'active': active }\"\n        (click)=\"setActive()\"\n        >Show open</a\n      >\n    </li>\n  </ul>\n  <form class=\"container-fluid col\">\n    <input\n      class=\"form-control\"\n      type=\"text\"\n      name=\"search\"\n      placeholder=\"Search\"\n      aria-label=\"Search\"\n      [(ngModel)]=\"toSearch\"\n    />\n  </form>\n</nav>\n<!-- /Pipe -->\n\n<!-- Restaurants -->\n<div\n  id=\"placesContainer\"\n  class=\"mb-4 mt-4 row row-cols-1 row-cols-md-2 row-cols-xl-3 g-4\"\n>\n  <div\n    class=\"col\"\n    *ngFor=\"let restaurant of restaurants | restaurantFilter: !active:toSearch\"\n  >\n    <fs-restaurant-card\n      [restaurant]=\"restaurant\"\n      (deleted)=\"deleteRestaurant(restaurant)\"\n    ></fs-restaurant-card>\n  </div>\n</div>\n<!-- /Restaurants -->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}