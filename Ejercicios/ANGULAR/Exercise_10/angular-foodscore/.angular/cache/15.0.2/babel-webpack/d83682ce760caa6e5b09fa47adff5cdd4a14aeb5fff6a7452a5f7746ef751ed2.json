{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/restaurant-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction RestaurantCardComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"Open\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RestaurantCardComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Closed\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/restaurant\", a1];\n};\nexport class RestaurantCardComponent {\n  constructor(restaurantsService) {\n    this.restaurantsService = restaurantsService;\n    this.days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    this.deleted = new EventEmitter();\n  }\n  checkOpening(daysOpen) {\n    let opened = false;\n    daysOpen.forEach(d => {\n      if (d === new Date().getDay().toString()) {\n        opened = true;\n      }\n    });\n    return opened;\n  }\n  fillDays(daysOpen) {\n    let result = '';\n    daysOpen.forEach(day => {\n      switch (day) {\n        case '0':\n        case 'Su':\n        case 'Sun':\n          result += 'Su,';\n          break;\n        case '1':\n        case 'Mo':\n        case 'Mon':\n          result += 'Mo,';\n          break;\n        case '2':\n        case 'Tu':\n        case 'tue':\n          result += 'Tu,';\n          break;\n        case '3':\n        case 'We':\n        case 'Wed':\n          result += 'We,';\n          break;\n        case '4':\n        case 'Th':\n        case 'Thu':\n          result += 'Th,';\n          break;\n        case '5':\n        case 'Fr':\n        case 'Fri':\n          result += 'Fr,';\n          break;\n        case '6':\n        case 'Sa':\n        case 'Sat':\n          result += 'Sa,';\n          break;\n      }\n    });\n    return result.substring(0, result.length - 1);\n  }\n  deleteRestaurant() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.restaurantsService.deleteRestaurant(this.restaurant.id).subscribe({\n      next: () => this.deleted.emit(),\n      error: e => console.error(e)\n    });\n  }\n  static #_ = this.ɵfac = function RestaurantCardComponent_Factory(t) {\n    return new (t || RestaurantCardComponent)(i0.ɵɵdirectiveInject(i1.RestaurantsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RestaurantCardComponent,\n    selectors: [[\"fs-restaurant-card\"]],\n    inputs: {\n      restaurant: \"restaurant\"\n    },\n    outputs: {\n      deleted: \"deleted\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 25,\n    vars: 14,\n    consts: [[1, \"card\", \"h-100\", \"shadow\"], [1, \"card-img-top\", 3, \"routerLink\", \"src\"], [1, \"card-body\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", \"float-end\", 3, \"click\"], [1, \"card-title\", 3, \"routerLink\"], [1, \"card-text\"], [1, \"text-muted\"], [\"class\", \"badge ms-2 bg-success\", 4, \"ngIf\", \"ngIfElse\"], [\"closed\", \"\"], [1, \"card-footer\"], [1, \"badge\", \"ms-2\", \"bg-success\"], [1, \"badge\", \"ms-2\", \"bg-danger\"]],\n    template: function RestaurantCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function RestaurantCardComponent_Template_button_click_3_listener() {\n          return ctx.deleteRestaurant();\n        });\n        i0.ɵɵtext(4, \"Delete\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h4\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\", 5);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5)(10, \"small\", 6)(11, \"strong\");\n        i0.ɵɵtext(12, \"Opens: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, RestaurantCardComponent_span_14_Template, 2, 0, \"span\", 7);\n        i0.ɵɵtemplate(15, RestaurantCardComponent_ng_template_15_Template, 2, 0, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 5)(18, \"small\", 6)(19, \"strong\");\n        i0.ɵɵtext(20, \"Phone: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"div\", 9)(23, \"small\", 6);\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(16);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.restaurant.image, i0.ɵɵsanitizeUrl);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(10, _c0, ctx.restaurant.id));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(12, _c0, ctx.restaurant.id));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.restaurant.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.restaurant.description);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", ctx.fillDays(ctx.restaurant.daysOpen), \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkOpening(ctx.restaurant.daysOpen))(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\"\", ctx.restaurant.phone, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.restaurant.cuisine);\n      }\n    },\n    dependencies: [CommonModule, i2.NgIf, FormsModule, RouterModule, i3.RouterLink],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","CommonModule","FormsModule","RouterModule","i0","RestaurantCardComponent","constructor","restaurantsService","checkOpening","daysOpen","opened","forEach","d","Date","getDay","toString","fillDays","result","day","substring","length","deleteRestaurant","restaurant","id","subscribe","next","deleted","emit","error","e","console","selectors","inputs","outputs","standalone","features","decls","vars","consts","template","ctx","styles"],"sourceRoot":"","sources":["C:\\Users\\nesto\\OneDrive\\Escritorio\\2DAW\\DWEC\\Ejercicios\\ANGULAR\\Exercise_10\\angular-foodscore\\src\\app\\restaurants\\restaurant-card\\restaurant-card.component.ts","C:\\Users\\nesto\\OneDrive\\Escritorio\\2DAW\\DWEC\\Ejercicios\\ANGULAR\\Exercise_10\\angular-foodscore\\src\\app\\restaurants\\restaurant-card\\restaurant-card.component.html"],"sourcesContent":["import { Component, EventEmitter, Output, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Restaurant } from '../interfaces/restaurant';\nimport { FormsModule } from '@angular/forms';\nimport { RestaurantsService } from '../services/restaurant-service.service';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'fs-restaurant-card',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterModule],\n  templateUrl: './restaurant-card.component.html',\n  styleUrls: ['./restaurant-card.component.css'],\n})\nexport class RestaurantCardComponent {\n  constructor(private readonly restaurantsService: RestaurantsService) {}\n\n  readonly days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  @Input() restaurant!: Restaurant;\n  @Output() deleted = new EventEmitter<void>();\n\n  checkOpening(daysOpen: string[]): boolean {\n    let opened = false;\n      daysOpen.forEach((d) => {\n        if (d === new Date().getDay().toString()) {\n          opened = true;\n        }\n      });\n    return opened;\n  }\n\n  fillDays(daysOpen: string[]): string {\n    let result = '';\n    daysOpen.forEach(day => {\n      switch (day) {\n        case '0':\n        case 'Su':\n        case 'Sun':\n          result += 'Su,'\n        break;\n        case '1':\n        case 'Mo':\n        case 'Mon':\n          result += 'Mo,'\n        break;\n        case '2':\n        case 'Tu':\n        case 'tue':\n          result += 'Tu,'\n        break;\n        case '3':\n        case 'We':\n        case 'Wed':\n          result += 'We,'\n        break;\n        case '4':\n        case 'Th':\n        case 'Thu':\n          result += 'Th,'\n        break;\n        case '5':\n        case 'Fr':\n        case 'Fri':\n          result += 'Fr,'\n        break;\n        case '6':\n        case 'Sa':\n        case 'Sat':\n          result += 'Sa,'\n        break;\n      }\n    });\n    return result.substring(0, result.length - 1);\n  }\n\n  deleteRestaurant(): void {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    this.restaurantsService.deleteRestaurant(this.restaurant.id!).subscribe({\n      next: () => this.deleted.emit(),\n      error: (e) => console.error(e),\n    });\n  }\n}\n","<div class=\"card h-100 shadow\">\n  <img class=\"card-img-top\" [routerLink]=\"['/restaurant',restaurant.id]\" src=\"{{ restaurant.image }}\" />\n  <div class=\"card-body\">\n    <button class=\"btn btn-danger btn-sm float-end\" (click)=\"deleteRestaurant()\">Delete</button>\n    <h4 class=\"card-title\" [routerLink]=\"['/restaurant',restaurant.id]\">{{ restaurant.name }}</h4>\n    <p class=\"card-text\">{{ restaurant.description }}</p>\n    <div class=\"card-text\">\n      <small class=\"text-muted\">\n        <strong>Opens: </strong>{{ fillDays(restaurant.daysOpen) }}\n      </small>\n      <span\n        class=\"badge ms-2 bg-success\"\n        *ngIf=\"checkOpening(restaurant.daysOpen); else closed\"\n        >Open</span\n      >\n      <ng-template #closed\n        ><span class=\"badge ms-2 bg-danger\">Closed</span></ng-template\n      >\n    </div>\n    <div class=\"card-text\">\n      <small class=\"text-muted\">\n        <strong>Phone: </strong>{{ restaurant.phone }}\n      </small>\n    </div>\n  </div>\n  <div class=\"card-footer\">\n    <small class=\"text-muted\">{{ restaurant.cuisine }}</small>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}