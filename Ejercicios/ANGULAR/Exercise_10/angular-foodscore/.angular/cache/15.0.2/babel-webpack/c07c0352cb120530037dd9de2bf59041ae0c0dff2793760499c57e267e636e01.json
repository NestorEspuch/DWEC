{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class RestaurantFilterPipe {\n  transform(restaurants, onlyOpen, search) {\n    const days = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n    if (onlyOpen) {\n      return restaurants.filter(r => r.daysOpen.includes(days[new Date().getDay()]) && (r.name.toLowerCase().includes(search.toLowerCase()) || r.description.toLowerCase().includes(search.toLowerCase())));\n    } else {\n      return restaurants.filter(r => r.name.toLowerCase().includes(search.toLowerCase()) || r.description.toLowerCase().includes(search.toLowerCase()));\n    }\n  }\n  static #_ = this.ɵfac = function RestaurantFilterPipe_Factory(t) {\n    return new (t || RestaurantFilterPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"restaurantFilter\",\n    type: RestaurantFilterPipe,\n    pure: true,\n    standalone: true\n  });\n}","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,oBAAoB;EAC/BC,SAAS,CACPC,WAAyB,EACzBC,QAAiB,EACjBC,MAAc;IAEd,MAAMC,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACvD,IAAIF,QAAQ,EAAE;MACZ,OAAOD,WAAW,CAACI,MAAM,CACtBC,CAAC,IACCA,CAAC,CAACC,QAAQ,CAACC,QAAQ,CAACJ,IAAI,CAAC,IAAIK,IAAI,EAAE,CAACC,MAAM,EAAE,CAAC,CAAC,KAC3CJ,CAAC,CAACK,IAAI,CAACC,WAAW,EAAE,CAACJ,QAAQ,CAACL,MAAM,CAACS,WAAW,EAAE,CAAC,IACvDN,CAAC,CAACO,WAAW,CAACD,WAAW,EAAE,CAACJ,QAAQ,CAACL,MAAM,CAACS,WAAW,EAAE,CAAC,CAAE,CAC/D;KACF,MAAM;MACL,OAAOX,WAAW,CAACI,MAAM,CACtBC,CAAC,IACAA,CAAC,CAACK,IAAI,CAACC,WAAW,EAAE,CAACJ,QAAQ,CAACL,MAAM,CAACS,WAAW,EAAE,CAAC,IACnDN,CAAC,CAACO,WAAW,CAACD,WAAW,EAAE,CAACJ,QAAQ,CAACL,MAAM,CAACS,WAAW,EAAE,CAAC,CAC7D;;EAEL;EAAC;qBArBUb,oBAAoB;EAAA;EAAA;;UAApBA,oBAAoB;IAAAe;IAAAC;EAAA","names":["RestaurantFilterPipe","transform","restaurants","onlyOpen","search","days","filter","r","daysOpen","includes","Date","getDay","name","toLowerCase","description","pure","standalone"],"sourceRoot":"","sources":["C:\\Users\\nesto\\OneDrive\\Escritorio\\2DAW\\DWEC\\Ejercicios\\ANGULAR\\Exercise_10\\angular-foodscore\\src\\app\\restaurants\\pipes\\restaurant-filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Restaurant } from '../interfaces/restaurant';\n\n@Pipe({\n  name: 'restaurantFilter',\n  standalone: true,\n})\nexport class RestaurantFilterPipe implements PipeTransform {\n  transform(\n    restaurants: Restaurant[],\n    onlyOpen: boolean,\n    search: string\n  ): Restaurant[] {\n    const days = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n    if (onlyOpen) {\n      return restaurants.filter(\n        (r) =>\n          (r.daysOpen.includes(days[new Date().getDay()]) &&\n            ((r.name.toLowerCase().includes(search.toLowerCase())) ||\n          r.description.toLowerCase().includes(search.toLowerCase())))\n      );\n    } else {\n      return restaurants.filter(\n        (r) =>\n          r.name.toLowerCase().includes(search.toLowerCase()) ||\n          r.description.toLowerCase().includes(search.toLowerCase())\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}