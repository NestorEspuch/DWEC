{"ast":null,"code":"import { catchError, map, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RestaurantsService {\n  constructor(http) {\n    this.http = http;\n    this.RESTAURANTS_URL = 'restaurants';\n  }\n  getRestaurants() {\n    return this.http.get(this.RESTAURANTS_URL).pipe(map(r => r.restaurants), catchError(resp => throwError(() => `Error getting products. Status: ${resp.status}. Message: ${resp.message}`)));\n  }\n  getRestaurant(id) {\n    return this.http.get(`${this.RESTAURANTS_URL}/${id}`).pipe(map(r => r.restaurant));\n  }\n  addRestaurant(restaurant) {\n    return this.http.post(this.RESTAURANTS_URL, restaurant).pipe(map(resp => resp.restaurant));\n  }\n  deleteRestaurant(id) {\n    return this.http.delete(`${this.RESTAURANTS_URL}/${id}`);\n  }\n  static #_ = this.ɵfac = function RestaurantsService_Factory(t) {\n    return new (t || RestaurantsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RestaurantsService,\n    factory: RestaurantsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAIA,SAASA,UAAU,EAAEC,GAAG,EAAcC,UAAU,QAAQ,MAAM;;;AAK9D,OAAM,MAAOC,kBAAkB;EAG7BC,YAA6BC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,oBAAe,GAAG,aAAa;EAEA;EAEhDC,cAAc;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAsB,IAAI,CAACC,eAAe,CAAC,CAACC,IAAI,CAClER,GAAG,CAAES,CAAC,IAAKA,CAAC,CAACC,WAAW,CAAC,EACzBX,UAAU,CAAEY,IAAuB,IACjCV,UAAU,CACR,MACE,mCAAmCU,IAAI,CAACC,MAAM,cAAcD,IAAI,CAACE,OAAO,EAAE,CAC7E,CACF,CACF;EACH;EAEAC,aAAa,CAACC,EAAU;IACtB,OAAO,IAAI,CAACX,IAAI,CAACE,GAAG,CAAqB,GAAG,IAAI,CAACC,eAAe,IAAIQ,EAAE,EAAE,CAAC,CAACP,IAAI,CAC5ER,GAAG,CAAES,CAAC,IAAKA,CAAC,CAACO,UAAU,CAAC,CACzB;EACH;EAEAC,aAAa,CAACD,UAAsB;IAClC,OAAO,IAAI,CAACZ,IAAI,CACbc,IAAI,CAAqB,IAAI,CAACX,eAAe,EAAES,UAAU,CAAC,CAC1DR,IAAI,CAACR,GAAG,CAAEW,IAAI,IAAKA,IAAI,CAACK,UAAU,CAAC,CAAC;EACzC;EAEAG,gBAAgB,CAACJ,EAAU;IACzB,OAAO,IAAI,CAACX,IAAI,CAACgB,MAAM,CAAO,GAAG,IAAI,CAACb,eAAe,IAAIQ,EAAE,EAAE,CAAC;EAChE;EAAC;qBA/BUb,kBAAkB;EAAA;EAAA;WAAlBA,kBAAkB;IAAAmB,SAAlBnB,kBAAkB;IAAAoB,YAFjB;EAAM","names":["catchError","map","throwError","RestaurantsService","constructor","http","getRestaurants","get","RESTAURANTS_URL","pipe","r","restaurants","resp","status","message","getRestaurant","id","restaurant","addRestaurant","post","deleteRestaurant","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\nesto\\OneDrive\\Escritorio\\2DAW\\DWEC\\Ejercicios\\ANGULAR\\Exercise_10\\angular-foodscore\\src\\app\\restaurants\\services\\restaurant-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\nimport { RestaurantResponse, RestaurantsResponse } from '../interfaces/responses';\nimport { Restaurant } from '../interfaces/restaurant';\nimport { catchError, map, Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RestaurantsService {\n  private readonly RESTAURANTS_URL = 'restaurants';\n\n  constructor(private readonly http: HttpClient) {}\n\n  getRestaurants(): Observable<Restaurant[]> {\n    return this.http.get<RestaurantsResponse>(this.RESTAURANTS_URL).pipe(\n      map((r) => r.restaurants),\n      catchError((resp: HttpErrorResponse) =>\n        throwError(\n          () =>\n            `Error getting products. Status: ${resp.status}. Message: ${resp.message}`\n        )\n      )\n    );\n  }\n\n  getRestaurant(id: number): Observable<Restaurant> {\n    return this.http.get<RestaurantResponse>(`${this.RESTAURANTS_URL}/${id}`).pipe(\n      map((r) => r.restaurant)\n    );\n  }\n\n  addRestaurant(restaurant: Restaurant): Observable<Restaurant> {\n    return this.http\n      .post<RestaurantResponse>(this.RESTAURANTS_URL, restaurant)\n      .pipe(map((resp) => resp.restaurant));\n  }\n\n  deleteRestaurant(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.RESTAURANTS_URL}/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}